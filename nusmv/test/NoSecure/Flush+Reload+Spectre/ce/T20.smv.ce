*** This is NuSMV 2.4.3 (compiled on Sat Nov  2 02:04:02 UTC 2019)
*** For more information on NuSMV see <http://nusmv.irst.itc.it>
*** or email to <nusmv-users@irst.itc.it>.
*** Please report bugs to <nusmv@irst.itc.it>.

-- specification !(EF 5 (E 0 [ cache.ExistStateSC = FALSE U (cpu.state = squash & EX 0 cache.ExistStateSC = TRUE)] ))  is false
Trace Type: Counterexample
-> Input: 1.1 <-
-> State: 1.1 <-
w_time = 0
attacker.cmd = store
attacker.rw_addr = OT_addr
victim.cmd = nop
cache.ExistStateSC = 1
cache.ExistStateOT = 1
predictor.Predict = NTSuccess
cpu.state = normal
cpu.time = 0
cpu.isflush = 0
-> Input: 1.2 <-
-> State: 1.2 <-
w_time = 1
attacker.cmd = nop
attacker.rw_addr = SC_addr
victim.cmd = load
predictor.Predict = nop
cpu.time = 1
-> Input: 1.3 <-
-> State: 1.3 <-
w_time = 0
attacker.cmd = flush
attacker.rw_addr = OT_addr
victim.cmd = store
cpu.time = 2
-> Input: 1.4 <-
-> State: 1.4 <-
attacker.cmd = store
cache.ExistStateSC = 0
cache.ExistStateOT = 0
cpu.time = 3
cpu.isflush = 1
-> Input: 1.5 <-
-> State: 1.5 <-
attacker.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
cpu.time = 4
-> Input: 1.6 <-
-> State: 1.6 <-
attacker.cmd = branch
cpu.time = 5
-> Input: 1.7 <-
-> State: 1.7 <-
attacker.cmd = store
victim.cmd = nop
predictor.Predict = TFailed
cpu.state = predict
cpu.time = 6
-> Input: 1.8 <-
-> State: 1.8 <-
w_time = 1
attacker.cmd = nop
predictor.Predict = nop
cpu.state = squash
cpu.time = 7
-> Input: 1.9 <-
-> State: 1.9 <-
w_time = 0
cpu.state = normal
cpu.time = 8

-> Input: 2.2 <-
-> State: 2.2 <-
w_time = 1
attacker.cmd = flush
attacker.rw_addr = SC_addr
victim.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
predictor.Predict = nop
cpu.state = normal
cpu.time = 1
cpu.isflush = 0
-> Input: 2.3 <-
-> State: 2.3 <-
w_time = 0
attacker.cmd = store
attacker.rw_addr = OT_addr
victim.cmd = store
cache.ExistStateSC = 0
cache.ExistStateOT = 0
cpu.time = 2
cpu.isflush = 1
-> Input: 2.4 <-
-> State: 2.4 <-
attacker.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
cpu.time = 3
-> Input: 2.5 <-
-> State: 2.5 <-
attacker.cmd = branch
cpu.time = 4
-> Input: 2.6 <-
-> State: 2.6 <-
attacker.cmd = store
victim.cmd = nop
predictor.Predict = TFailed
cpu.state = predict
cpu.time = 5
-> Input: 2.7 <-
-> State: 2.7 <-
w_time = 1
attacker.cmd = nop
predictor.Predict = nop
cpu.state = squash
cpu.time = 6
-> Input: 2.8 <-
-> State: 2.8 <-
w_time = 0
cpu.state = normal
cpu.time = 7

-> Input: 3.2 <-
-> State: 3.2 <-
w_time = 1
attacker.cmd = nop
attacker.rw_addr = OT_addr
victim.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
predictor.Predict = nop
cpu.state = normal
cpu.time = 1
cpu.isflush = 0
-> Input: 3.3 <-
-> State: 3.3 <-
w_time = 0
attacker.cmd = flush
victim.cmd = store
cpu.time = 2
-> Input: 3.4 <-
-> State: 3.4 <-
attacker.cmd = store
cache.ExistStateSC = 0
cache.ExistStateOT = 0
cpu.time = 3
cpu.isflush = 1
-> Input: 3.5 <-
-> State: 3.5 <-
attacker.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
cpu.time = 4
-> Input: 3.6 <-
-> State: 3.6 <-
attacker.cmd = branch
cpu.time = 5
-> Input: 3.7 <-
-> State: 3.7 <-
attacker.cmd = store
victim.cmd = nop
predictor.Predict = TFailed
cpu.state = predict
cpu.time = 6
-> Input: 3.8 <-
-> State: 3.8 <-
w_time = 1
attacker.cmd = nop
predictor.Predict = nop
cpu.state = squash
cpu.time = 7
-> Input: 3.9 <-
-> State: 3.9 <-
w_time = 0
cpu.state = normal
cpu.time = 8

-> Input: 4.2 <-
-> State: 4.2 <-
w_time = 1
attacker.cmd = flush
attacker.rw_addr = OT_addr
victim.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
predictor.Predict = nop
cpu.state = normal
cpu.time = 1
cpu.isflush = 0
-> Input: 4.3 <-
-> State: 4.3 <-
w_time = 0
attacker.cmd = store
victim.cmd = store
cache.ExistStateSC = 0
cache.ExistStateOT = 0
cpu.time = 2
cpu.isflush = 1
-> Input: 4.4 <-
-> State: 4.4 <-
attacker.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
cpu.time = 3
-> Input: 4.5 <-
-> State: 4.5 <-
attacker.cmd = branch
cpu.time = 4
-> Input: 4.6 <-
-> State: 4.6 <-
attacker.cmd = store
victim.cmd = nop
predictor.Predict = TFailed
cpu.state = predict
cpu.time = 5
-> Input: 4.7 <-
-> State: 4.7 <-
w_time = 1
attacker.cmd = nop
predictor.Predict = nop
cpu.state = squash
cpu.time = 6
-> Input: 4.8 <-
-> State: 4.8 <-
w_time = 0
cpu.state = normal
cpu.time = 7

-> Input: 5.2 <-
-> State: 5.2 <-
w_time = 1
attacker.cmd = nop
attacker.rw_addr = SC_addr
victim.cmd = nop
cache.ExistStateSC = 1
cache.ExistStateOT = 1
predictor.Predict = nop
cpu.state = normal
cpu.time = 1
cpu.isflush = 0
-> Input: 5.3 <-
-> State: 5.3 <-
w_time = 0
attacker.cmd = flush
attacker.rw_addr = OT_addr
victim.cmd = store
cpu.time = 2
-> Input: 5.4 <-
-> State: 5.4 <-
attacker.cmd = store
cache.ExistStateSC = 0
cache.ExistStateOT = 0
cpu.time = 3
cpu.isflush = 1
-> Input: 5.5 <-
-> State: 5.5 <-
attacker.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
cpu.time = 4
-> Input: 5.6 <-
-> State: 5.6 <-
attacker.cmd = branch
cpu.time = 5
-> Input: 5.7 <-
-> State: 5.7 <-
attacker.cmd = store
victim.cmd = nop
predictor.Predict = TFailed
cpu.state = predict
cpu.time = 6
-> Input: 5.8 <-
-> State: 5.8 <-
w_time = 1
attacker.cmd = nop
predictor.Predict = nop
cpu.state = squash
cpu.time = 7
-> Input: 5.9 <-
-> State: 5.9 <-
w_time = 0
cpu.state = normal
cpu.time = 8

-> Input: 6.2 <-
-> State: 6.2 <-
w_time = 1
attacker.cmd = flush
attacker.rw_addr = SC_addr
victim.cmd = nop
cache.ExistStateSC = 1
cache.ExistStateOT = 1
predictor.Predict = nop
cpu.state = normal
cpu.time = 1
cpu.isflush = 0
-> Input: 6.3 <-
-> State: 6.3 <-
w_time = 0
attacker.cmd = store
attacker.rw_addr = OT_addr
victim.cmd = store
cache.ExistStateSC = 0
cache.ExistStateOT = 0
cpu.time = 2
cpu.isflush = 1
-> Input: 6.4 <-
-> State: 6.4 <-
attacker.cmd = load
cache.ExistStateSC = 1
cache.ExistStateOT = 1
cpu.time = 3
-> Input: 6.5 <-
-> State: 6.5 <-
attacker.cmd = branch
cpu.time = 4
-> Input: 6.6 <-
-> State: 6.6 <-
attacker.cmd = store
victim.cmd = nop
predictor.Predict = TFailed
cpu.state = predict
cpu.time = 5
-> Input: 6.7 <-
-> State: 6.7 <-
w_time = 1
attacker.cmd = nop
predictor.Predict = nop
cpu.state = squash
cpu.time = 6
-> Input: 6.8 <-
-> State: 6.8 <-
w_time = 0
cpu.state = normal
cpu.time = 7
